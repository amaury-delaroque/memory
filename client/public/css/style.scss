/* On importe nos fichiers CSS ou SCSS */
@use "reset";
@use "vars";
/*
SASS va regarder ce fichier et compiler tous les changements dans le fichier index.css
On initialise nos vaiables CSS (!! =/= variables SCSS)
Elles nous serviront à modifier la palette de couleur en JS en fonction du theme séléctionné.*/
:root {
  --primaryColor: #30cfbf;
  --lightColor: #d6f5f2;
  --secondColor: #1d7c72;
  --darkColor: #0a2926;
}
* {
  box-sizing: border-box;
  transition: background-color 0.2s;
}
body {
  width: 100%;
  background-color: var(--lightColor);
  font-family: "Roboto", sans-serif;
}
.header {
  background-color: var(--primaryColor);
  width: 100%;
  padding: 0.4rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  z-index: 2;
  h1 {
    color: var(--lightColor);
    text-align: center;
    font-size: 1.8rem;
    font-weight: bold;
  }
  .logo {
    width: 15%;
    max-width: 50px;
    height: 50px;
    background-color: var(--lightColor);
    /* la propriété mask va nous permettre de reproduire notre svg sur une div pour simuler le changement de couleur du svg */
    -webkit-mask: url(../images/logo.svg) no-repeat center;
    mask: url(../images/logo.svg) no-repeat center;
    box-shadow: vars.$shadowBox;
  }
  &__themes {
    &__container {
      /* On positionne le container du menu juste sous le header tout à droite avec une width de 0 et opacité 0 pour le masquer */
      background-color: var(--lightColor);
      border-radius: 0 0 vars.$borderRadius vars.$borderRadius;
      width: 0px;
      max-height: 300px;
      overflow-y: scroll;
      z-index: 1;
      position: absolute;
      transform: translateY(100%);
      display: block;
      transition: 0.3s;
      right: 0;
      bottom: 0;
      opacity: 0;
      box-shadow: vars.$shadowBox;
      &--open {
        /* On rend visible le container de theme en lui donnant une width et on enleve la trasparence */
        border: 1px solid var(--primaryColor);
        border-top: none;
        width: 100%;
        opacity: 1;
      }
      &__li {
        width: 100%;
        background-color: var(--lightColor);
        padding: 0.5rem;
        text-align: center;
        font-weight: bold;
        color: var(--primaryColor);
        border-bottom: 1px solid var(--primaryColor);
        transition: 0.3s;
        cursor: pointer;
        &:hover {
          background-color: var(--primaryColor);
          color: var(--lightColor);
        }
      }
      &__title {
        width: 100%;
        padding: 0.5rem;
        font-weight: bold;
        background-color: var(--secondColor);
        color: var(--lightColor);
        cursor: initial;
      }
    }
    &__button {
      width: 50px;
      height: 50px;
      background-color: var(--primaryColor);
      border-bottom: 3px solid var(--lightColor);
      border-left: 2px solid var(--lightColor);
      border-right: 1px solid var(--lightColor);
      border-top: none;
      border-radius: 50%;
      box-shadow: vars.$shadowBox;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: 0.3s;
      cursor: pointer;
      &:hover {
        filter: brightness(90%);
      }
      &:active {
        filter: brightness(75%);
      }
      &:disabled {
        opacity: 0;
        cursor: initial;
      }
      &__icon {
        width: 40px;
        height: 40px;
        background-color: var(--lightColor);
        /* on ajoute un masque sur la div pour simuler le changement de couleur */
        -webkit-mask: url(../images/theme.svg) no-repeat center;
        mask: url(../images/theme.svg) no-repeat center;
      }
    }
  }
}
/* Container général du jeu, positionner sous le header */
.main-game {
  width: 100%;
  flex-direction: column;
  display: flex;
  justify-content: space-around;
  align-items: center;
  min-height: 85vh;
  /* On utilise 2 divs pour simuler le timer total. La partie elapsed = temps écoulé */
  .timer {
    &__total {
      position: relative;
      width: 75%;
      border: 1px solid var(--lightColor);
      border-radius: vars.$borderRadius;
      height: 1rem;
      background-color: var(--darkColor);
    }
    &__elapsed {
      position: relative;
      height: 100%;
      width: 1%;
      border-radius: vars.$borderRadius 0 0 vars.$borderRadius;
      background-color: var(--primaryColor);
      &::after {
        /* Effet de gradient pour simuler une forme de tube sur le timer elapsed */
        position: absolute;
        left: 0;
        top: 0;
        content: "";
        width: 100%;
        height: 100%;
        border-radius: var(--borderRadius);
        background: #4a4a4a;
        background: linear-gradient(
          0deg,
          #4a4a4a12 0%,
          #ffffff4e 51%,
          #00000013 100%
        );
      }
      &__decor {
        /* Div décorative pour simuler la fin du tube */
        position: absolute;
        right: 0;
        top: 0;
        width: 4px;
        border-radius: 50%;
        height: 100%;
        transform: translateX(50%);
        z-index: 1;
        background-color: var(--primaryColor);
        &::after {
          position: absolute;
          left: 0;
          top: 0;
          content: "";
          width: 4px;
          height: 100%;
          border-radius: 50%;
          background: #000000;
          background: linear-gradient(61deg, #0000004d 0%, #ffffffd2 100%);
        }
      }
    }
  }
  /* Toutes nos cartes seront contenue dans le board */
  .board {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    width: 95%;
    padding: 0 2rem;
    padding-top: 1rem;
    &__cards {
      /* cards contiendra la partie front et back de la carte */
      cursor: pointer;
      position: relative;
      margin: 0.3rem;
      width: 90px;
      height: 90px;
      /* On simule un objet de 3D sur notre carte */
      perspective: 2000px;
      perspective-origin: bottom right;
      transform-style: preserve-3d;
      /* on anime la rotation de la carte */
      transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);
      /* front et back on la plupart des propriétés communes */
      &--front,
      &--back {
        position: absolute;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: vars.$borderRadius;
        backface-visibility: hidden; /* on cache la face qui n'est pas visible */
        -webkit-backface-visibility: hidden;
        box-shadow: vars.$shadowBox;
        -webkit-box-shadow: vars.$shadowBox;
        -moz-box-shadow: vars.$shadowBox;
        &::after {
          /* on utilise la pseudo-classe sur les 2 faces de cartes pour les propriétés communes */
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          border-radius: vars.$borderRadius;
        }
      }
      &--back {
        background: var(--primaryColor);
        &::after {
          /* Effet gradient transparant pour afficher les auréoles sur la face arrière des cartes */
          background: #a8a8a8;
          background: radial-gradient(
            circle,
            #a8a8a812 0%,
            #ffffff44 51%,
            #c1c1c113 100%
          );
        }
      }
      &--front {
        background-color: #fff;
        /* on retourne la carte pour voir la face arrière */
        transform: rotateY(180deg);
        &::after {
          /* Effet de gradient transparent pour simuler la luminosité sur les cartes */
          background: #000000;
          background: linear-gradient(
            315deg,
            #00000019 0%,
            #94939300 21%,
            #fffefe04 37%,
            #ffffff54 49%,
            #ffffff00 60%,
            #7a7a7a00 80%,
            #0000001a 100%
          );
        }
      }
      &--reveal {
        /* on retourne la carte pour voir l'image */
        transform: rotateY(180deg);
        cursor: initial;
      }

      &__images {
        position: relative;
        width: 90%;
        max-height: 90%;
        object-fit: cover;
      }
    }
  }
}

.modal {
  position: relative;
  width: 85%;
  border-radius: vars.$borderRadius;
  background-color: #ccc;
  box-shadow: 0 4px 8px 0 #00000033, 0 6px 20px 0 #00000030;
  /* on utilise l'animation qui simule la chute de la modale du haut de la fenetre vers le centre */
  animation-name: animatetop;
  animation-duration: 0.4s;
  h2,
  h3 {
    font-weight: bold;
  }
  h2 {
    font-size: 1.8rem;
    padding: 1rem;
  }
  h3 {
    padding-top: 1rem;
    font-size: 1.3rem;
  }
  p {
    padding: 0.5rem;
  }
  &__container {
    /* On simule une page complete en surimpression pour contenir notre modale */
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 1;
    background-color: rgba(0, 0, 0, 0.4);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  &__close {
    /* Quand on ajoute la close, la modale disparait */
    display: none;
  }
  &__header {
    border-radius: vars.$borderRadius vars.$borderRadius 0 0;
    text-align: center;
    color: var(--lightColor);
    background-color: var(--primaryColor);
  }
  &__body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 0.3rem;
    padding: 1rem;
    background-color: var(--lightColor);
    &__title {
      color: var(--primaryColor);
    }
    &__text {
      text-align: center;
    }
  }
  &__footer {
    background-color: var(--primaryColor);
    border-radius: 0 0 vars.$borderRadius vars.$borderRadius;
    padding: 0.5rem;
    display: flex;
    justify-content: center;
    align-items: center;

    &__btn {
      padding: 0.5rem 1rem;
      border: none;
      box-shadow: none;
      border-radius: vars.$borderRadius;
      background-color: var(--secondColor);
      background: var(--secondColor);
      color: var(--lightColor);
      border: 1px solid var(--lightColor);
      transition: 0.3s;
      &:hover {
        filter: brightness(90%);
      }
    }
  }
}
.score {
  /* Style du tableau de scores affichés dans les modales */
  &__table {
    table-layout: fixed;
    border-collapse: collapse;
    border: 1px solid var(--primaryColor);
    margin: auto;
    overflow: auto;
    thead {
      background: var(--primaryColor);
      color: #fff;
    }
    thead tr {
      display: block;
    }
    tbody {
      display: block;
      width: 100%;
      overflow: auto;
      height: 100px;
    }
    td,
    th {
      padding: 0.3rem;
      text-align: center;
      width: 100px;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
}
.my-score {
  /* on ajoute cette classe pour différencier le score que l'on vien d'enregistrer en BDD */
  background-color: var(--primaryColor);
  color: var(--lightColor);
}
.input {
  &__container {
    margin: 0 auto;
    width: 80%;
    display: flex;
    align-items: center;
    box-shadow: vars.$shadowBox;
    border-radius: vars.$borderRadius;
    background-color: #fff;
    input {
      width: 100%;
      height: 100%;
      display: block;
      padding: 0.5rem;
      border-radius: 0 vars.$borderRadius vars.$borderRadius 0;
      border: none;
      box-shadow: none;
      margin: 0;
      &::placeholder {
        text-align: center;
      }
      &:focus {
        border: none;
        outline: none;
        border-bottom: 2px solid var(--secondColor);
        box-shadow: vars.$shadowBox;
      }
    }
    label {
      display: block;
      height: 100%;
      background-color: var(--secondColor);
      border-radius: vars.$borderRadius 0 0 vars.$borderRadius;
      color: var(--lightColor);
      font-size: 0.8rem;
      font-weight: bold;
      text-align: center;
      padding: 0.5rem;
      border-bottom: 4px solid var(--secondColor);
    }
  }
}
/* Add media-queries mi-width 700px => Tablet*/
@media screen and (min-width: 700px) {
  .header {
    &__themes {
      &__container {
        &--open {
          width: 50%;
        }
      }
    }
  }
  .main-game {
    .board {
      &__cards {
        width: 110px;
        height: 140px;
      }
    }
  }
  .modal {
    width: 68%;
  }
}
/* Add media-queries mi-width 1024px => Desktop*/
@media screen and (min-width: 1024px) {
  .header {
    &__themes {
      &__container {
        &--open {
          width: 25%;
        }
      }
    }
  }
  .main-game {
    .board {
      width: 90%;
      max-width: 1000px;
      &__cards {
        width: 130px;
        margin: 0.5rem;
        height: 160px;
      }
    }
  }
  .modal {
    width: 60%;
  }
  .score {
    &__table {
      td,
      th {
        width: 150px;
      }
    }
  }
}
/*  Animation de la modale */
@keyframes animatetop {
  from {
    top: -300px;
    opacity: 0;
  }
  to {
    top: 0;
    opacity: 1;
  }
}
